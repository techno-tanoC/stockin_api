version: '3'

includes:
  http: ./http

vars:
  DATABASE: db/database.sqlite3

tasks:
  replicate:
    cmds:
      - litestream replicate -config ./litestream.yaml

  run-replicate:
    cmds:
      - mkdir -p ./db
      - litestream restore -config ./litestream.yaml -if-db-not-exists -if-replica-exists {{.DATABASE}}
      - litestream replicate -config ./litestream.yaml -exec "cargo run"

  seed:
    cmds:
      - cargo run --bin seed

  sqlite:
    cmds:
      - sqlite3 {{.DATABASE}}

  create:
    cmds:
      - sqlite3 {{.DATABASE}} ""

  drop:
    cmds:
      - rm -rf db
      - mkdir db

  apply:
    cmds:
      - sqlite3def -f schema.sql {{.DATABASE}}

  setup:
    cmds:
      - task: drop
      - task: create
      - task: apply

  reset:
    cmds:
      - task: setup
      - task: seed

  deploy-sandbox:
    prompt: Deploy to `sandbox`. Continue?
    cmds:
      - docker build -t us-west1-docker.pkg.dev/sandbox-310216/stockin/app:latest -f docker/app/Dockerfile --platform linux/x86_64 --push .
      - gcloud run deploy stockin --image=us-west1-docker.pkg.dev/sandbox-310216/stockin/app:latest --region=us-west1

  deploy-main:
    prompt: Deploy to `main`. Continue?
    cmds:
      - docker build -t us-west1-docker.pkg.dev/main-282614/stockin/app:latest -f docker/app/Dockerfile --platform linux/x86_64 --push .
      - gcloud run deploy stockin --image=us-west1-docker.pkg.dev/main-282614/stockin/app:latest --region=us-west1
