version: '3'

includes:
  http: ./http

vars:
  DATABASE: db/database.sqlite3

env:
  PGPASSWORD: pass

tasks:
  seed:
    cmds:
      - cargo run --bin seed

  sqlite:
    cmds:
      - sqlite3 {{.DATABASE}}

  psql:
    cmds:
      - psql -h db -U root -d dev -P pager=off

  create:
    cmds:
      - psql -h db -U root postgres -c "CREATE DATABASE dev" || true

  drop:
    cmds:
      - psql -h db -U root postgres -c "DROP DATABASE IF EXISTS dev WITH (FORCE)"

  apply:
    cmds:
      - psqldef -h db -U root dev < schema.sql

  setup:
    cmds:
      - task: drop
      - task: create
      - task: apply

  reset:
    cmds:
      - task: setup
      - task: seed

  deploy-sandbox:
    prompt: Deploy to `sandbox`. Continue?
    cmds:
      - docker build -t us-west1-docker.pkg.dev/sandbox-310216/stockin/app:latest -f docker/app/Dockerfile --platform linux/x86_64 --push .
      - gcloud run deploy stockin --image=us-west1-docker.pkg.dev/sandbox-310216/stockin/app:latest --region=us-west1

  deploy-main:
    prompt: Deploy to `main`. Continue?
    cmds:
      - docker build -t us-west1-docker.pkg.dev/main-282614/stockin/app:latest -f docker/app/Dockerfile --platform linux/x86_64 --push .
      - gcloud run deploy stockin --image=us-west1-docker.pkg.dev/main-282614/stockin/app:latest --region=us-west1
